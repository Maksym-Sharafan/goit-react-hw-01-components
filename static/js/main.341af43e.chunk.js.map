{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","statsItem","label","quantity","followers","views","likes","Statistics","statistics","title","statList","map","id","percentage","item","style","backgroundColor","Math","random","toString","substring","toUpperCase","FriendList","friends","friendList","isOnline","status","width","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.341af43e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3635n\",\"description\":\"Profile_description__3sNog\",\"avatar\":\"Profile_avatar__3RjCX\",\"name\":\"Profile_name__3_ilr\",\"tag\":\"Profile_tag__UkwDv\",\"location\":\"Profile_location__3lYEK\",\"stats\":\"Profile_stats__1mmcp\",\"statsItem\":\"Profile_statsItem__3zO0_\",\"label\":\"Profile_label__7fP1n\",\"quantity\":\"Profile_quantity__2zPTZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1eB1C\",\"title\":\"Statistics_title__1s02V\",\"statList\":\"Statistics_statList__3IOnB\",\"item\":\"Statistics_item__3dLoq\",\"percentage\":\"Statistics_percentage__rLV3x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1DnJZ\",\"item\":\"FriendList_item__27liO\",\"status\":\"FriendList_status__32kOp\",\"avatar\":\"FriendList_avatar__vHXS-\",\"name\":\"FriendList_name__1Smss\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__8Jb3K\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => (\n  <div className={styles.profile}>\n    <div className={styles.description}>\n      <img src={avatar} alt=\"Аватар пользователя\" className={styles.avatar} />\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tag}>@{tag}</p>\n      <p className={styles.location}>{location}</p>\n    </div>\n\n    <ul className={styles.stats}>\n      <li className={styles.statsItem}>\n        <span className={styles.label}>Followers</span>\n        <span className={styles.quantity}>{stats.followers}</span>\n      </li>\n      <li className={styles.statsItem}>\n        <span className={styles.label}>Views</span>\n        <span className={styles.quantity}>{stats.views}</span>\n      </li>\n      <li className={styles.statsItem}>\n        <span className={styles.label}>Likes</span>\n        <span className={styles.quantity}>{stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.objectOf(PropTypes.number),\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ stats }) => (\n  <section className={styles.statistics}>\n    <h2 className={styles.title}>Upload stats</h2>\n\n    <ul className={styles.statList}>\n      {stats.map(({ id, label, percentage }) => (\n        <li\n          key={id}\n          className={styles.item}\n          style={{\n            backgroundColor: `${\n              '#' +\n              (Math.random().toString(16) + '000000')\n                .substring(2, 8)\n                .toUpperCase()\n            }`,\n          }}\n        >\n          <span className={styles.label}>{label}</span>\n          <span className={styles.percentage}>{percentage}%</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.propTypes = {\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => (\n  <ul className={styles.friendList}>\n    {friends.map(({ avatar, name, isOnline, id }) => (\n      <li key={id} className={styles.item}>\n        <span\n          className={styles.status}\n          style={{\n            backgroundColor: isOnline ? 'rgb(61, 150, 61)' : 'rgb(175, 63, 63)',\n          }}\n        ></span>\n        <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\n        <p className={styles.name}>{name}</p>\n      </li>\n    ))}\n  </ul>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={styles.transactionHistory}>\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {items.map(({ id, type, amount, currency }) => (\n        <tr key={id}>\n          <td>{type}</td>\n          <td>{amount}</td>\n          <td>{currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\n\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nimport user from './user.json';\nimport statisticalData from './statistical-data.json';\nimport friends from './friends.json';\nimport transactions from './transactions.json';\n\nconst App = () => {\n    return (\n        <div>\n            <Profile\n                name={user.name}\n                tag={user.tag}\n                location={user.location}\n                avatar={user.avatar}\n                stats={user.stats}\n            />\n            <Statistics stats={statisticalData} />\n            <FriendList friends={friends} />\n            <TransactionHistory items={transactions} />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './base-styles.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}